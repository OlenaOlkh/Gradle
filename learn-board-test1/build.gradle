plugins {
    id 'java'
    id 'org.sonarqube' version "4.2.1.3168"
    id 'io.qameta.allure' version '2.11.2'
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

allure {
    version = '2.17.3'
    autoconfigure = true
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.sonarqube'
    apply plugin: 'io.qameta.allure'

    ext {
        log4j2_version = "2.19.0"
        restAssuredVersion = '4.5.1'
        testNgVersion = '7.10.2'
        lombokVersion = '1.18.24'
    }

    group = 'com.epam'
    version = '1.0.0'
    sourceCompatibility = '17'
    targetCompatibility = '17'

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    dependencies {
        implementation 'org.slf4j:slf4j-log4j12:1.7.30'
        implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"
        implementation "org.apache.logging.log4j:log4j-core:$log4j2_version"
        implementation "org.apache.logging.log4j:log4j-jul:$log4j2_version"

        implementation "io.rest-assured:rest-assured:$restAssuredVersion"
        implementation "io.rest-assured:json-path:$restAssuredVersion"
        implementation "io.rest-assured:xml-path:$restAssuredVersion"
        implementation 'org.jetbrains:annotations:20.1.0'

        implementation 'org.assertj:assertj-core:3.22.0'

        testImplementation "org.testng:testng:$testNgVersion"

        implementation 'org.awaitility:awaitility:4.2.0'

        compileOnly group: 'org.projectlombok', name: 'lombok', version: "$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        implementation "org.projectlombok:lombok:$lombokVersion"

        testImplementation 'io.qameta.allure:allure-testng:2.17.3'
        testImplementation 'io.qameta.allure:allure-cucumber7-jvm:2.17.3'
    }

    tasks.withType(Test) {
        useTestNG()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}